# encoding: utf8
"""
Django settings for MxOnline project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

''' 
正常情况下，urls.py 里导入views时，必须把apps这个前缀加上，如本例：from app.message.views import getform
如果把apps和extra_apps作为搜索目录，需要import sys, 且需要分别添加如下声明，这样在urls.py 里导入views时，必须把apps这个前缀加上，
就可以省略 apps.  这个前缀了， 即写成：from message.views import getform
'''
sys.path.insert(0, os.path.join(BASE_DIR, 'apps'))
sys.path.insert(0, os.path.join(BASE_DIR, 'extra_apps'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'o7nbupx9rfrqmqg7lk29a*hp-&()y460_lx7orzbo9vq!e6s9h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

# 重载AUTHENTICATION_BACKENDS变量
AUTHENTICATION_BACKENDS = (
    'users.views.CustomBackend',
)



INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',      # django自带的session机制
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'courses',
    'organizations',
    'operations',
    'xadmin',       #引入xadmin
    'crispy_forms',  # 引入xadmin的依赖包(注意中间要用下划线）
    'captcha',      #第三方图片验证码生成器
]

# 手动重载AUTH_USER_MODEL
AUTH_USER_MODEL = "users.UserProfile"

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MxOnline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MxOnline.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "mxonline",
        'USER':"root",
        "PASSWORD":"123456",
        "HOST":"localhost",
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh_hans'   #后台改为中文显示

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'       #时区改为上海

USE_I18N = True

USE_L10N = True

# USE_TZ = True
USE_TZ = False  #修改为False（本地时间），否则django在数据库存储过程中会使用国际时间

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# 手动指定static的位置
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
'''
以下设置是为了避免以下报错：Error fetching command 'collectstatic' ...
'''
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_DIR, 'static')


# 设置邮箱的发送方
EMAIL_HOST = 'smtp.sina.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = 'nicekidee@sina.com'
EMAIL_FROM = 'nicekidee@sina.com'
EMAIL_HOST_PASSWORD = 'Banana@001'
EMAIL_USE_TLS = False



'''
# django1.8以后，TEMPLATE_DIRS 就不被官方推荐使用了，而是写进TEMPLATES列表，即：

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),],
        ...

'''
# TEMPLATE_DIRS = (os.path.join(BASE_DIR,  'templates'),)




